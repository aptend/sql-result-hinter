#SQL[@2,N29]Result[]
drop database if exists vecdb

#SQL[@3,N21]Result[]
create database vecdb

#SQL[@4,N9]Result[]
use vecdb

#SQL[@5,N30]Result[]
drop table if exists vec_table

#SQL[@8,N55]Result[]
create table vec_table(a int, b vecf32(3), c vecf64(3))

#SQL[@9,N14]Result[71, 51, 53, 53]
desc vec_table
Field  ¦  Type  ¦  Null  ¦  Key  ¦  Default  ¦  Extra  ¦  Comment
a  ¦  INT(32)  ¦  YES  ¦    ¦  null  ¦    ¦  
b  ¦  VECF32(3)  ¦  YES  ¦    ¦  null  ¦    ¦  
c  ¦  VECF64(3)  ¦  YES  ¦    ¦  null  ¦    ¦  

#SQL[@10,N53]Result[]
insert into vec_table values(1, "[1,2,3]", "[4,5,6]")

#SQL[@11,N23]Result[15, 31]
select * from vec_table
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@13,N26]Result[]
set save_query_result = on

#SQL[@14,N23]Result[15, 31]
select * from vec_table
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@15,N47]Error[84]
select * from result_scan(last_query_id()) as u
result file query_result_meta/sys_01997556-fada-71b6-ab92-acec98797cff.blk not found

#SQL[@16,N27]Result[]
set save_query_result = off

#SQL[@19,N25]Result[5, 9]
select b+b from vec_table
b + b
[2, 4, 6]

#SQL[@20,N25]Result[5, 9]
select b-b from vec_table
b - b
[0, 0, 0]

#SQL[@21,N25]Result[5, 9]
select b*b from vec_table
b * b
[1, 4, 9]

#SQL[@22,N25]Result[5, 9]
select b/b from vec_table
b / b
[1, 1, 1]

#SQL[@23,N42]Result[]
select * from vec_table where b> "[1,2,3]"

#SQL[@24,N42]Result[]
select * from vec_table where b< "[1,2,3]"

#SQL[@25,N43]Result[15, 31]
select * from vec_table where b>= "[1,2,3]"
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@26,N43]Result[15, 31]
select * from vec_table where b<= "[1,2,3]"
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@27,N43]Result[]
select * from vec_table where b!= "[1,2,3]"

#SQL[@28,N42]Result[15, 31]
select * from vec_table where b= "[1,2,3]"
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@29,N61]Result[15, 31]
select * from vec_table where b= cast("[1,2,3]" as vecf32(3))
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@30,N35]Result[11, 9]
select b + "[1,2,3]" from vec_table
b + [1,2,3]
[2, 4, 6]

#SQL[@31,N33]Error[79]
select b + "[1,2]" from vec_table
invalid input: vector ops between different dimensions (3, 2) is not permitted.

#SQL[@32,N37]Error[79]
select b + "[1,2,3,4]" from vec_table
invalid input: vector ops between different dimensions (3, 4) is not permitted.

#SQL[@36,N35]Result[26, 9]
select cast("[1,2,3]" as vecf32(3))
cast([1,2,3] as vecf32(3))
[1, 2, 3]

#SQL[@37,N35]Result[11, 9]
select b + "[1,2,3]" from vec_table
b + [1,2,3]
[2, 4, 6]

#SQL[@38,N33]Result[11, 41]
select b + sqrt(b) from vec_table
b + sqrt(b)
[2, 3.414213562373095, 4.732050807568877]

#SQL[@39,N27]Result[5, 9]
select b + c from vec_table
b + c
[5, 7, 9]

#SQL[@42,N28]Result[6, 9]
select abs(b) from vec_table
abs(b)
[1, 2, 3]

#SQL[@43,N42]Result[33, 9]
select abs(cast("[-1,-2,3]" as vecf32(3)))
abs(cast([-1,-2,3] as vecf32(3)))
[1, 2, 3]

#SQL[@44,N29]Result[7, 43]
select sqrt(b) from vec_table
sqrt(b)
[1, 1.4142135623730951, 1.7320508075688772]

#SQL[@45,N34]Result[12, 1]
select summation(b) from vec_table
summation(b)
6

#SQL[@46,N32]Result[10, 1]
select l1_norm(b) from vec_table
l1_norm(b)
6

#SQL[@47,N32]Result[10, 17]
select l2_norm(b) from vec_table
l2_norm(b)
3.741657257080078

#SQL[@48,N36]Result[14, 1]
select vector_dims(b) from vec_table
vector_dims(b)
3

#SQL[@49,N48]Result[25, 3]
select inner_product(b,"[1,2,3]") from vec_table
inner_product(b, [1,2,3])
-14

#SQL[@50,N52]Result[29, 1]
select cosine_similarity(b,"[1,2,3]") from vec_table
cosine_similarity(b, [1,2,3])
1

#SQL[@51,N46]Result[23, 1]
select l2_distance(b,"[1,2,3]") from vec_table
l2_distance(b, [1,2,3])
0

#SQL[@52,N50]Result[27, 1]
select cosine_distance(b,"[1,2,3]") from vec_table
cosine_distance(b, [1,2,3])
0

#SQL[@53,N37]Result[15, 35]
select normalize_l2(b) from vec_table
normalize_l2(b)
[0.26726124, 0.5345225, 0.80178374]

#SQL[@56,N72]Result[15, 31]
select * FROM vec_table ORDER BY cosine_similarity(b, '[3,1,2]') LIMIT 5
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@57,N66]Result[15, 31]
select * FROM vec_table ORDER BY l2_distance(b, '[3,1,2]') LIMIT 5
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@58,N68]Result[15, 31]
select * FROM vec_table ORDER BY inner_product(b, '[3,1,2]') LIMIT 5
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@62,N34]Error[46]
select b + "[1,2,3" from vec_table
internal error: malformed vector input: [1,2,3

#SQL[@63,N33]Error[45]
select b + "1,2,3" from vec_table
internal error: malformed vector input: 1,2,3

#SQL[@64,N47]Error[57]
create table t2(a int, b vecf32(3) primary key)
not supported: VECTOR column 'b' cannot be in primary key

#SQL[@65,N38]Error[51]
create unique index t3 on vec_table(b)
not supported: VECTOR column 'b' cannot be in index

#SQL[@66,N39]Error[78]
create table t3(a int, b vecf32(65537))
data out of range: data type vecf32,  typeLen is over the MaxVectorLen : 65535

#SQL[@69,N42]Error[35]
select sqrt(cast("[1,2,-3]" as vecf32(3)))
invalid argument Sqrt, bad value -3

#SQL[@70,N54]Error[16]
select b/(cast("[1,2,0]" as vecf32(3))) from vec_table
division by zero

#SQL[@73,N30]Result[8, 1]
select count(b) from vec_table
count(b)
1

#SQL[@76,N48]Result[]
create table t4(a int, b vecf32(5), c vecf64(5))

#SQL[@77,N54]Result[]
insert into t4 values(1, "[1,2,3,4,5]", "[1,2,3,4,5]")

#SQL[@78,N42]Error[65]
insert into t4 values(1, "[1,2]", "[1,2]")
invalid input: expected vector dimension 5 != actual dimension 2.

#SQL[@79,N58]Error[65]
insert into t4 values(1, "[1,2,3,4,5,6]", "[1,2,3,4,5,6]")
invalid input: expected vector dimension 5 != actual dimension 6.

#SQL[@80,N16]Result[15, 43]
select * from t4
a  ¦  b  ¦  c
1  ¦  [1, 2, 3, 4, 5]  ¦  [1, 2, 3, 4, 5]

#SQL[@83,N35]Result[]
create table t5(a int, b vecf32(3))

#SQL[@84,N73]Result[]
insert into t5 values(1, cast(unhex('7e98b23e9e10383b2f41133f') as blob))

#SQL[@85,N73]Result[]
insert into t5 values(2, cast(unhex('0363733ff13e0b3f7aa39d3e') as blob))

#SQL[@86,N73]Result[]
insert into t5 values(3, cast(unhex('be1ac03e485d083ef6bc723f') as blob))

#SQL[@88,N35]Result[]
insert into t5 values(4, "[0,2,3]")

#SQL[@90,N89]Error[65]
insert into t5 values(5, cast(unhex('05486c3f3ee2863e713d503dd58e8e3e7b88743f') as blob))
invalid input: expected vector dimension 3 != actual dimension 5.

#SQL[@91,N65]Error[65]
insert into t5 values(6, cast(unhex('9be2123fcf92de3e') as blob))
invalid input: expected vector dimension 3 != actual dimension 2.

#SQL[@93,N16]Result[8, 44, 43, 42, 16]
select * from t5
a  ¦  b
1  ¦  [0.34881967, 0.0028086076, 0.5752134]
2  ¦  [0.95072955, 0.54392916, 0.30788785]
3  ¦  [0.37520403, 0.13316834, 0.9481958]
4  ¦  [0, 2, 3]

#SQL[@94,N39]Result[8, 44, 43, 42, 16]
select * from t5 where t5.b > "[0,0,0]"
a  ¦  b
1  ¦  [0.34881967, 0.0028086076, 0.5752134]
2  ¦  [0.95072955, 0.54392916, 0.30788785]
3  ¦  [0.37520403, 0.13316834, 0.9481958]
4  ¦  [0, 2, 3]

#SQL[@97,N21]Result[6, 24, 24, 24, 24]
select hex(b) from t5
hex(b)
7e98b23e9e10383b2f41133f
0363733ff13e0b3f7aa39d3e
be1ac03e485d083ef6bc723f
000000000000004000004040

#SQL[@100,N35]Result[]
create table t6(a int, b vecf32(3))

#SQL[@101,N30]Result[]
insert into t6 values(1, null)

#SQL[@102,N122]Result[]
insert into t6 (a,b) values (1, '[1,2,3]'), (2, '[4,5,6]'), (3, '[2,1,1]'), (4, '[7,8,9]'), (5, '[0,0,0]'), (6, '[3,1,2]')

#SQL[@103,N16]Result[8, 11, 16, 16, 16, 16, 16, 16]
select * from t6
a  ¦  b
1  ¦  null
1  ¦  [1, 2, 3]
2  ¦  [4, 5, 6]
3  ¦  [2, 1, 1]
4  ¦  [7, 8, 9]
5  ¦  [0, 0, 0]
6  ¦  [3, 1, 2]

#SQL[@104,N22]Result[]
update t6 set b = NULL

#SQL[@105,N16]Result[8, 11, 11, 11, 11, 11, 11, 11]
select * from t6
a  ¦  b
1  ¦  null
1  ¦  null
2  ¦  null
3  ¦  null
4  ¦  null
5  ¦  null
6  ¦  null

#SQL[@108,N48]Result[]
create table t7(a int, b vecf32(3), c vecf32(5))

#SQL[@109,N35]Result[]
insert into t7 values(1, NULL,NULL)

#SQL[@110,N68]Result[]
insert into t7 values(2, "[0.8166459, 0.66616553, 0.4886152]", NULL)

#SQL[@111,N118]Result[]
insert into t7 values(3, "[0.1726299, 3.2908857, 30.433094]","[0.45052445, 2.1984527, 9.579752, 123.48039, 4635.894]")

#SQL[@112,N115]Result[]
insert into t7 values(4, "[8.560689, 6.790359, 821.9778]", "[0.46323407, 23.498016, 563.923, 56.076736, 8732.958]")

#SQL[@113,N16]Result[15, 21, 51, 100, 96]
select * from t7
a  ¦  b  ¦  c
1  ¦  null  ¦  null
2  ¦  [0.8166459, 0.66616553, 0.4886152]  ¦  null
3  ¦  [0.1726299, 3.2908857, 30.433094]  ¦  [0.45052445, 2.1984527, 9.579752, 123.48039, 4635.894]
4  ¦  [8.560689, 6.790359, 821.9778]  ¦  [0.46323407, 23.498016, 563.923, 56.076736, 8732.958]

#SQL[@114,N26]Result[]
set save_query_result = on

#SQL[@115,N16]Result[15, 21, 51, 100, 96]
select * from t7
a  ¦  b  ¦  c
1  ¦  null  ¦  null
2  ¦  [0.8166459, 0.66616553, 0.4886152]  ¦  null
3  ¦  [0.1726299, 3.2908857, 30.433094]  ¦  [0.45052445, 2.1984527, 9.579752, 123.48039, 4635.894]
4  ¦  [8.560689, 6.790359, 821.9778]  ¦  [0.46323407, 23.498016, 563.923, 56.076736, 8732.958]

#SQL[@116,N47]Error[84]
select * from result_scan(last_query_id()) as u
result file query_result_meta/sys_01997556-fb9f-78f6-94cb-81d54d3e737c.blk not found

#SQL[@117,N27]Result[]
set save_query_result = off

#SQL[@118,N30]Result[23, 21, 50, 100, 101]
select a, b + b, c + c from t7
a  ¦  b + b  ¦  c + c
1  ¦  null  ¦  null
2  ¦  [1.6332918, 1.3323311, 0.9772304]  ¦  null
3  ¦  [0.3452598, 6.5817714, 60.866188]  ¦  [0.9010489, 4.3969054, 19.159504, 246.96078, 9271.788]
4  ¦  [17.121378, 13.580718, 1643.9556]  ¦  [0.92646813, 46.996033, 1127.846, 112.15347, 17465.916]

#SQL[@119,N30]Result[23, 21, 52, 101, 97]
select a, b * b, c * c from t7
a  ¦  b * b  ¦  c * c
1  ¦  null  ¦  null
2  ¦  [0.6669106, 0.44377652, 0.23874483]  ¦  null
3  ¦  [0.02980108, 10.829928, 926.1732]  ¦  [0.20297228, 4.8331943, 91.771645, 15247.407, 21491514]
4  ¦  [73.28539, 46.108974, 675647.5]  ¦  [0.2145858, 552.1568, 318009.12, 3144.6003, 76264550]

#SQL[@120,N37]Result[26, 14, 27, 37, 37]
select l2_norm(b), l2_norm(c) from t7
l2_norm(b)  ¦  l2_norm(c)
null  ¦  null
1.161650538444519  ¦  null
30.61099624633789  ¦  4637.548828125
822.0504150390625  ¦  8751.357421875

#SQL[@124,N53]Result[]
insert into vec_table values(2, "[0,2,3]", "[4,4,6]")

#SQL[@125,N53]Result[]
insert into vec_table values(3, "[1,3,3]", "[4,1,6]")

#SQL[@127,N47]Result[34, 79]
select mo_ctl('dn', 'flush', 'vecdb.vec_table')
mo_ctl(dn, flush, vecdb.vec_table)
{
  "method": "Flush",
  "result": [
    {
      "returnStr": "OK"
    }
  ]
}


#SQL[@129,N40]Result[27, 79]
select mo_ctl('dn', 'flush', 'vecdb.t6')
mo_ctl(dn, flush, vecdb.t6)
{
  "method": "Flush",
  "result": [
    {
      "returnStr": "OK"
    }
  ]
}


#SQL[@130,N42]Result[15, 31]
select * from vec_table where b> "[1,2,3]"
a  ¦  b  ¦  c
3  ¦  [1, 3, 3]  ¦  [4, 1, 6]

#SQL[@131,N43]Result[15, 31, 31]
select * from vec_table where b!= "[1,2,3]"
a  ¦  b  ¦  c
2  ¦  [0, 2, 3]  ¦  [4, 4, 6]
3  ¦  [1, 3, 3]  ¦  [4, 1, 6]

#SQL[@132,N42]Result[15, 31]
select * from vec_table where b= "[1,2,3]"
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@135,N56]Result[]
create table vec_table1(a int, b vecf32(3), c vecf64(3))

#SQL[@136,N54]Result[]
insert into vec_table1 values(1, "[1,2,3]", "[4,5,6]")

#SQL[@137,N24]Result[15, 31]
select * from vec_table1
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@138,N68]Result[]
create table vec_table2(a int primary key, b vecf32(3), c vecf64(3))

#SQL[@139,N54]Result[]
insert into vec_table2 values(1, "[1,2,3]", "[4,5,6]")

#SQL[@140,N24]Result[15, 31]
select * from vec_table2
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@141,N67]Result[]
create table vec_table3(a int unique key, b vecf32(3), c vecf64(3))

#SQL[@142,N54]Result[]
insert into vec_table3 values(1, "[1,2,3]", "[4,5,6]")

#SQL[@143,N24]Result[15, 31]
select * from vec_table3
a  ¦  b  ¦  c
1  ¦  [1, 2, 3]  ¦  [4, 5, 6]

#SQL[@146,N22]Result[15, 4]
select summation(null)
summation(null)
null

#SQL[@147,N20]Result[13, 4]
select l1_norm(null)
l1_norm(null)
null

#SQL[@148,N20]Result[13, 4]
select l2_norm(null)
l2_norm(null)
null

#SQL[@149,N24]Result[17, 4]
select vector_dims(null)
vector_dims(null)
null

#SQL[@150,N37]Result[28, 4]
select inner_product(null, "[1,2,3]")
inner_product(null, [1,2,3])
null

#SQL[@151,N41]Result[32, 4]
select cosine_similarity(null, "[1,2,3]")
cosine_similarity(null, [1,2,3])
null

#SQL[@152,N35]Result[26, 4]
select l2_distance(null, "[1,2,3]")
l2_distance(null, [1,2,3])
null

#SQL[@153,N39]Result[30, 4]
select cosine_distance(null, "[1,2,3]")
cosine_distance(null, [1,2,3])
null

#SQL[@154,N25]Result[18, 4]
select normalize_l2(null)
normalize_l2(null)
null

#SQL[@155,N30]Result[23, 4]
select cast(null as vecf32(3))
cast(null as vecf32(3))
null

#SQL[@156,N30]Result[23, 4]
select cast(null as vecf64(3))
cast(null as vecf64(3))
null

#SQL[@159,N48]Result[]
create table t8(a int, b vecf32(3), c vecf32(5))

#SQL[@160,N37]Result[]
INSERT INTO `t8` VALUES (1,NULL,NULL)

#SQL[@161,N68]Result[]
INSERT INTO `t8` VALUES(2,'[0.8166459, 0.66616553, 0.4886152]',NULL)

#SQL[@162,N119]Result[]
INSERT INTO `t8` VALUES(3,'[0.1726299, 3.2908857, 30.433094]','[0.45052445, 2.1984527, 9.579752, 123.48039, 4635.894]')

#SQL[@163,N115]Result[]
INSERT INTO `t8` VALUES(4,'[8.560689, 6.790359, 821.9778]','[0.46323407, 23.498016, 563.923, 56.076736, 8732.958]')

#SQL[@164,N61]Result[52, 14, 11, 42, 8]
select cosine_similarity(b,b), cosine_similarity(c,c) from t8
cosine_similarity(b, b)  ¦  cosine_similarity(c, c)
null  ¦  null
1  ¦  null
0.9999998589068639  ¦  0.9999999473078075
1  ¦  1

#SQL[@166,N48]Result[]
create table t9(a int, b vecf64(3), c vecf64(5))

#SQL[@167,N37]Result[]
INSERT INTO `t9` VALUES (1,NULL,NULL)

#SQL[@168,N69]Result[]
INSERT INTO `t9` VALUES (2,'[0.8166459, 0.66616553, 0.4886152]',NULL)

#SQL[@169,N132]Result[]
INSERT INTO `t9` VALUES (3,'[8.5606893, 6.7903588, 821.977768]','[0.46323407, 23.49801546, 563.9229458, 56.07673508, 8732.9583881]')

#SQL[@170,N129]Result[]
INSERT INTO `t9` VALUES (4,'[0.9260021, 0.26637346, 0.06567037]','[0.45756745, 65.2996871, 321.623636, 3.60082066, 87.58445764]')

#SQL[@171,N61]Result[52, 14, 11, 8, 8]
select cosine_similarity(b,b), cosine_similarity(c,c) from t9
cosine_similarity(b, b)  ¦  cosine_similarity(c, c)
null  ¦  null
1  ¦  null
1  ¦  1
1  ¦  1

#SQL[@174,N49]Result[]
create table t10(a int, b vecf32(3), c vecf64(3))

#SQL[@175,N51]Result[]
insert into t10 values(1, "[1,2.4,3]", "[4.1,5,6]")

#SQL[@176,N49]Result[]
insert into t10 values(2, "[3,4,5]", "[6,7.3,8]")

#SQL[@177,N48]Result[]
insert into t10 values(3, "[5,6,7]", "[8,9,10]")

#SQL[@178,N30]Result[15, 11, 9, 9]
select subvector(b,1) from t10
subvector(b, 1)
[1, 2.4, 3]
[3, 4, 5]
[5, 6, 7]

#SQL[@179,N30]Result[15, 8, 6, 6]
select subvector(b,2) from t10
subvector(b, 2)
[2.4, 3]
[4, 5]
[6, 7]

#SQL[@180,N30]Result[15, 3, 3, 3]
select subvector(b,3) from t10
subvector(b, 3)
[3]
[5]
[7]

#SQL[@181,N30]Result[15, 2, 2, 2]
select subvector(b,4) from t10
subvector(b, 4)
[]
[]
[]

#SQL[@182,N31]Result[16, 3, 3, 3]
select subvector(b,-1) from t10
subvector(b, -1)
[3]
[5]
[7]

#SQL[@183,N31]Result[16, 8, 6, 6]
select subvector(b,-2) from t10
subvector(b, -2)
[2.4, 3]
[4, 5]
[6, 7]

#SQL[@184,N31]Result[16, 11, 9, 9]
select subvector(b,-3) from t10
subvector(b, -3)
[1, 2.4, 3]
[3, 4, 5]
[5, 6, 7]

#SQL[@185,N34]Result[18, 3, 3, 3]
select subvector(b, 1, 1) from t10
subvector(b, 1, 1)
[1]
[3]
[5]

#SQL[@186,N34]Result[18, 8, 6, 6]
select subvector(b, 1, 2) from t10
subvector(b, 1, 2)
[1, 2.4]
[3, 4]
[5, 6]

#SQL[@187,N34]Result[18, 11, 9, 9]
select subvector(b, 1, 3) from t10
subvector(b, 1, 3)
[1, 2.4, 3]
[3, 4, 5]
[5, 6, 7]

#SQL[@188,N34]Result[18, 11, 9, 9]
select subvector(b, 1, 4) from t10
subvector(b, 1, 4)
[1, 2.4, 3]
[3, 4, 5]
[5, 6, 7]

#SQL[@189,N35]Result[19, 3, 3, 3]
select subvector(b, -1, 1) from t10
subvector(b, -1, 1)
[3]
[5]
[7]

#SQL[@190,N35]Result[19, 5, 3, 3]
select subvector(b, -2, 1) from t10
subvector(b, -2, 1)
[2.4]
[4]
[6]

#SQL[@191,N35]Result[19, 3, 3, 3]
select subvector(b, -3, 1) from t10
subvector(b, -3, 1)
[1]
[3]
[5]

#SQL[@192,N30]Result[21, 6]
SELECT SUBVECTOR("[1,2,3]", 2)
SUBVECTOR([1,2,3], 2)
[2, 3]

#SQL[@193,N31]Result[24, 3]
SELECT SUBVECTOR("[1,2,3]",2,1)
SUBVECTOR([1,2,3], 2, 1)
[2]

#SQL[@196,N21]Result[5, 11, 9, 9]
select b + 2 from t10
b + 2
[3, 4.4, 5]
[5, 6, 7]
[7, 8, 9]

#SQL[@197,N21]Result[5, 18, 9, 9]
select b - 2 from t10
b - 2
[-1, 0.4000001, 1]
[1, 2, 3]
[3, 4, 5]

#SQL[@198,N21]Result[5, 11, 10, 12]
select b * 2 from t10
b * 2
[2, 4.8, 6]
[6, 8, 10]
[10, 12, 14]

#SQL[@199,N21]Result[5, 15, 13, 13]
select b / 2 from t10
b / 2
[0.5, 1.2, 1.5]
[1.5, 2, 2.5]
[2.5, 3, 3.5]

#SQL[@200,N21]Result[5, 11, 9, 9]
select 2 + b from t10
2 + b
[3, 4.4, 5]
[5, 6, 7]
[7, 8, 9]

#SQL[@201,N21]Error[54]
select 2 - b from t10
invalid argument operator -, bad value [BIGINT VECF32]

#SQL[@202,N21]Result[5, 11, 10, 12]
select 2 * b from t10
2 * b
[2, 4.8, 6]
[6, 8, 10]
[10, 12, 14]

#SQL[@203,N21]Error[54]
select 2 / b from t10
invalid argument operator /, bad value [BIGINT VECF32]

#SQL[@204,N23]Result[7, 11, 9, 9]
select b + 2.0 from t10
b + 2.0
[3, 4.4, 5]
[5, 6, 7]
[7, 8, 9]

#SQL[@205,N23]Result[7, 18, 9, 9]
select b - 2.0 from t10
b - 2.0
[-1, 0.4000001, 1]
[1, 2, 3]
[3, 4, 5]

#SQL[@206,N23]Result[7, 11, 10, 12]
select b * 2.0 from t10
b * 2.0
[2, 4.8, 6]
[6, 8, 10]
[10, 12, 14]

#SQL[@207,N23]Result[7, 15, 13, 13]
select b / 2.0 from t10
b / 2.0
[0.5, 1.2, 1.5]
[1.5, 2, 2.5]
[2.5, 3, 3.5]

#SQL[@208,N23]Result[7, 11, 9, 9]
select 2.0 + b from t10
2.0 + b
[3, 4.4, 5]
[5, 6, 7]
[7, 8, 9]

#SQL[@209,N23]Error[57]
select 2.0 - b from t10
invalid argument operator -, bad value [DECIMAL64 VECF32]

#SQL[@210,N23]Result[7, 11, 10, 12]
select 2.0 * b from t10
2.0 * b
[2, 4.8, 6]
[6, 8, 10]
[10, 12, 14]

#SQL[@211,N23]Error[57]
select 2.0 / b from t10
invalid argument operator /, bad value [DECIMAL64 VECF32]

#SQL[@212,N39]Result[30, 9]
select cast("[1,2,3]" as vecf32(3)) + 2
cast([1,2,3] as vecf32(3)) + 2
[3, 4, 5]

#SQL[@213,N39]Result[30, 10]
select cast("[1,2,3]" as vecf32(3)) - 2
cast([1,2,3] as vecf32(3)) - 2
[-1, 0, 1]

#SQL[@214,N39]Result[30, 9]
select cast("[1,2,3]" as vecf32(3)) * 2
cast([1,2,3] as vecf32(3)) * 2
[2, 4, 6]

#SQL[@215,N39]Result[30, 13]
select cast("[1,2,3]" as vecf32(3)) / 2
cast([1,2,3] as vecf32(3)) / 2
[0.5, 1, 1.5]

#SQL[@216,N39]Result[30, 9]
select 2 + cast("[1,2,3]" as vecf32(3))
2 + cast([1,2,3] as vecf32(3))
[3, 4, 5]

#SQL[@217,N39]Error[54]
select 2 - cast("[1,2,3]" as vecf32(3))
invalid argument operator -, bad value [BIGINT VECF32]

#SQL[@218,N39]Result[30, 9]
select 2 * cast("[1,2,3]" as vecf32(3))
2 * cast([1,2,3] as vecf32(3))
[2, 4, 6]

#SQL[@219,N39]Error[54]
select 2 / cast("[1,2,3]" as vecf32(3))
invalid argument operator /, bad value [BIGINT VECF32]

#SQL[@220,N41]Result[32, 9]
select cast("[1,2,3]" as vecf32(3)) + 2.0
cast([1,2,3] as vecf32(3)) + 2.0
[3, 4, 5]

#SQL[@221,N41]Result[32, 10]
select cast("[1,2,3]" as vecf32(3)) - 2.0
cast([1,2,3] as vecf32(3)) - 2.0
[-1, 0, 1]

#SQL[@222,N41]Result[32, 9]
select cast("[1,2,3]" as vecf32(3)) * 2.0
cast([1,2,3] as vecf32(3)) * 2.0
[2, 4, 6]

#SQL[@223,N41]Result[32, 13]
select cast("[1,2,3]" as vecf32(3)) / 2.0
cast([1,2,3] as vecf32(3)) / 2.0
[0.5, 1, 1.5]

#SQL[@224,N41]Result[32, 9]
select 2.0 + cast("[1,2,3]" as vecf32(3))
2.0 + cast([1,2,3] as vecf32(3))
[3, 4, 5]

#SQL[@225,N41]Error[57]
select 2.0 - cast("[1,2,3]" as vecf32(3))
invalid argument operator -, bad value [DECIMAL64 VECF32]

#SQL[@226,N41]Result[32, 9]
select 2.0 * cast("[1,2,3]" as vecf32(3))
2.0 * cast([1,2,3] as vecf32(3))
[2, 4, 6]

#SQL[@227,N41]Error[57]
select 2.0 / cast("[1,2,3]" as vecf32(3))
invalid argument operator /, bad value [DECIMAL64 VECF32]

#SQL[@228,N40]Error[16]
select cast("[1,2,3]" as vecf32(3)) / 0 
division by zero

#SQL[@229,N44]Result[37, 9]
select 5 + (-1*cast("[1,2,3]" as vecf32(3)))
5 + (-1 * cast([1,2,3] as vecf32(3)))
[4, 3, 2]

#SQL[@232,N29]Result[]
create table t11(a vecf32(2))

#SQL[@233,N31]Result[]
insert into t11 values('[1,0]')

#SQL[@234,N31]Result[]
insert into t11 values('[1,2]')

#SQL[@235,N26]Result[1, 6, 6]
select distinct a from t11
a
[1, 0]
[1, 2]

#SQL[@236,N28]Result[8, 18, 18]
select distinct a,a from t11
a  ¦  a
[1, 0]  ¦  [1, 0]
[1, 2]  ¦  [1, 2]

#SQL[@239,N23]Result[]
drop table if exists t1

#SQL[@240,N101]Result[]
create table t1(c1 int,c2 vecf32(5),c3 tinyint unsigned,c4 bigint,c5 decimal(4,2),c6 float,c7 double)

#SQL[@241,N63]Result[]
insert into t1 values(10 ,"[1, 0, 1, 6, 6]",3,10,7.1,0.36,2.10)

#SQL[@242,N64]Result[]
insert into t1 values(60,"[6, 0, 8, 10,129]",2,5,3.26,4.89,1.26)

#SQL[@243,N64]Result[]
insert into t1 values(20,"[ 9, 18, 1, 4, 132]",6,1,9.36,6.9,5.6)

#SQL[@244,N20]Result[7, 15, 19, 20]
select c2+c3 from t1
c2 + c3
[4, 3, 4, 9, 9]
[8, 2, 10, 12, 131]
[15, 24, 7, 10, 138]

#SQL[@247,N40]Result[15, 100, 96]
select * from t8 except select * from t9
a  ¦  b  ¦  c
3  ¦  [0.1726299, 3.2908857, 30.433094]  ¦  [0.45052445, 2.1984527, 9.579752, 123.48039, 4635.894]
4  ¦  [8.560689, 6.790359, 821.9778]  ¦  [0.46323407, 23.498016, 563.923, 56.076736, 8732.958]

#SQL[@250,N111]Error[47]
select cast("[76875768584509877574546435800000005,8955885757767774774774774456466]" as vecf32(2)) *623585864455
internal error: vector contains infinity values

#SQL[@253,N86]Result[75, 9]
select l2_distance("[0, 0, 0]", "[3, 4, 0]"), l2_distance_sq("[0, 0, 0]", "[3, 4, 0]")
l2_distance([0, 0, 0], [3, 4, 0])  ¦  l2_distance_sq([0, 0, 0], [3, 4, 0])
5  ¦  25

#SQL[@255,N80]Result[]
CREATE TABLE `vector_test` (id INT PRIMARY KEY AUTO_INCREMENT, vector vecf32(3))

#SQL[@256,N45]Result[]
INSERT INTO `vector_test` VALUES(1,"[1,2,4]")

#SQL[@257,N74]Result[]
prepare s1 from 'SELECT id, cosine_similarity(vector, ?) FROM vector_test'

#SQL[@258,N16]Result[]
set @a="[1,2,3]"

#SQL[@259,N19]Result[36, 25]
execute s1 using @a
id  ¦  cosine_similarity(vector, ?)
1  ¦  0.9914601460482495

#SQL[@262,N19]Result[]
drop database vecdb

